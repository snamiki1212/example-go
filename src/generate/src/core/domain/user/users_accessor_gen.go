// Code generated by go generate DO NOT EDIT.

package user

// UserIDs
func (xs Users) UserIDs() []string {
	sli := make([]string, 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].UserID)
	}
	return sli
}

// Names
func (xs Users) Names() []string {
	sli := make([]string, 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].Name)
	}
	return sli
}

// Ages
func (xs Users) Ages() []int64 {
	sli := make([]int64, 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].Age)
	}
	return sli
}

// PtrAges
func (xs Users) PtrAges() []*int64 {
	sli := make([]*int64, 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].PtrAge)
	}
	return sli
}

// callback5s
func (xs Users) callback5s() []func(head string, tail ...bool) (num int64) {
	sli := make([]func(head string, tail ...bool) (num int64), 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].callback5)
	}
	return sli
}

// callback6s
func (xs Users) callback6s() []func(head string, tail ...func(x1 string) (y1 string)) (num int64) {
	sli := make([]func(head string, tail ...func(x1 string) (y1 string)) (num int64), 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].callback6)
	}
	return sli
}
